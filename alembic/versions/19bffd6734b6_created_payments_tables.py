"""created payments tables

Revision ID: 19bffd6734b6
Revises: 
Create Date: 2023-07-21 10:35:36.484909

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '19bffd6734b6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('terminal_key', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(length=36), nullable=False),
    sa.Column('ip', postgresql.INET(), nullable=True),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('language', sa.String(length=2), nullable=True),
    sa.Column('recurrent', sa.String(length=1), nullable=False),
    sa.Column('customer_key', sa.String(length=36), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('redirect_due_date', sa.DateTime(), nullable=True),
    sa.Column('notification_url', sa.String(), nullable=True),
    sa.Column('success_url', sa.String(), nullable=True),
    sa.Column('fail_url', sa.String(), nullable=True),
    sa.Column('pay_type', sa.Enum('SINGLE_STAGE', 'TWO_STAGE', name='paytype'), nullable=False),
    sa.Column('payment_url', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=64), nullable=True),
    sa.Column('taxation', sa.Enum('OSN', 'USN_INCOME', 'USN_INCOME_OUTCOME', 'PATENT', 'ENVD', 'ESN', name='taxation'), nullable=False),
    sa.Column('additional_check_props', sa.String(), nullable=True),
    sa.Column('ffd_version', sa.Enum('VERSION_1_2', 'VERSION_1_05', name='ffdversion'), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.Enum('FULL_PAYMENT', 'FULL_PREPAYMENT', 'PREPAYMENT', 'ADVANCE', 'PARTIAL_PAYMENT', 'CREDIT', 'CREDIT_PAYMENT', name='paymentmethod'), nullable=True),
    sa.Column('payment_object', sa.Enum('COMMODITY', 'EXCISE', 'JOB', 'SERVICE', 'GAMBLING_BET', 'GAMBLING_PRIZE', 'LOTTERY', 'LOTTERY_PRIZE', 'INTELLECTUAL_ACTIVITY', 'PAYMENT', 'AGENT_COMMISSION', 'COMPOSITE', 'ANOTHER', name='paymentobject'), nullable=True),
    sa.Column('tax', sa.Enum('NONE', 'VAT0', 'VAT10', 'VAT20', 'VAT110', 'VAT120', name='tax'), nullable=False),
    sa.Column('ean13', sa.String(length=20), nullable=True),
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receipt_id'], ['receipts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipt_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('electronic', sa.Integer(), nullable=False),
    sa.Column('cash', sa.Integer(), nullable=False),
    sa.Column('advance_payment', sa.Integer(), nullable=False),
    sa.Column('credit', sa.Integer(), nullable=False),
    sa.Column('provision', sa.Integer(), nullable=False),
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receipt_id'], ['receipts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_sign', sa.Enum('BANK_PAYING_AGENT', 'BANK_PAYING_SUBAGENT', 'PAYING_AGENT', 'PAYING_SUBAGENT', 'ATTORNEY', 'COMMISSION_AGENT', 'ANOTHER', name='agentsign'), nullable=True),
    sa.Column('operation_name', sa.String(length=64), nullable=True),
    sa.Column('phones', sa.String(), nullable=True),
    sa.Column('receiver_phones', sa.String(), nullable=True),
    sa.Column('transfer_phones', sa.String(), nullable=True),
    sa.Column('operator_name', sa.String(length=64), nullable=True),
    sa.Column('operator_address', sa.String(length=243), nullable=True),
    sa.Column('operator_inn', sa.String(length=12), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_id', 'id', name='agent_id_item_id_constr')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phones', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=239), nullable=False),
    sa.Column('inn', sa.String(length=12), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_id', 'id', name='supplier_id_item_id_constr')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('suppliers')
    op.drop_table('agents')
    op.drop_table('receipt_payments')
    op.drop_table('items')
    op.drop_table('receipts')
    op.drop_table('payments')
    # ### end Alembic commands ###
